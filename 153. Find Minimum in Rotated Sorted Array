153. Find Minimum in Rotated Sorted Array

Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.


class Solution:
    # @param num, a list of integer
    # @return an integer
    def findMin(self, num):
        length = len(num)
        rear = length - 1
        front = 0
        min_num = num[length-1]
       
        while(front <= rear):
            mid = (front + rear)/2
            if num[mid] >= min_num:
                front = mid + 1
            else:
                rear = mid
                min_num = num[mid]
        return min_num
